const { Strapi } = require('@strapi/strapi');

async function generateSchema() {
    try {
        console.log('üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Strapi...');

        const contentTypes = {
            // –ö–∞—Ç–µ–≥–æ—Ä–∏—è
            'api::category.category': {
                kind: 'collectionType',
                collectionName: 'categories',
                info: {
                    singularName: 'category',
                    pluralName: 'categories',
                    displayName: 'Category',
                    description: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π',
                },
                options: { draftAndPublish: false },
                attributes: {
                    name: { type: 'string', required: true },
                    alias: { type: 'string', unique: true },
                    description: { type: 'text' },
                    image: { type: 'media', allowedTypes: ['images'], multiple: false },
                    ordering: { type: 'integer', default: 0 },
                    parent: {
                        type: 'relation',
                        relation: 'oneToOne',
                        target: 'api::category.category',
                    },
                    news_items: {
                        type: 'relation',
                        relation: 'oneToMany',
                        target: 'api::news-item.news-item',
                        mappedBy: 'category'
                    }
                },
            },

            // –ê–≤—Ç–æ—Ä
            'api::author.author': {
                kind: 'collectionType',
                collectionName: 'authors',
                info: {
                    singularName: 'author',
                    pluralName: 'authors',
                    displayName: 'Author',
                    description: '–ê–≤—Ç–æ—Ä—ã –Ω–æ–≤–æ—Å—Ç–µ–π',
                },
                options: { draftAndPublish: false },
                attributes: {
                    name: { type: 'string', required: true },
                    avatar: { type: 'media', allowedTypes: ['images'], multiple: false },
                    profile: { type: 'json' },
                    news_items: {
                        type: 'relation',
                        relation: 'oneToMany',
                        target: 'api::news-item.news-item',
                        mappedBy: 'author'
                    }
                },
            },

            // –¢–µ–≥
            'api::tag.tag': {
                kind: 'collectionType',
                collectionName: 'tags',
                info: {
                    singularName: 'tag',
                    pluralName: 'tags',
                    displayName: 'Tag',
                    description: '–¢–µ–≥–∏ –Ω–æ–≤–æ—Å—Ç–µ–π',
                },
                options: { draftAndPublish: false },
                attributes: {
                    name: { type: 'string', required: true, unique: true },
                    news_items: {
                        type: 'relation',
                        relation: 'manyToMany',
                        target: 'api::news-item.news-item',
                        mappedBy: 'tags'
                    }
                },
            },

            // –ù–æ–≤–æ—Å—Ç—å (–≥–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç-—Ç–∏–ø)
            'api::news-item.news-item': {
                kind: 'collectionType',
                collectionName: 'news_items',
                info: {
                    singularName: 'news-item',
                    pluralName: 'news-items',
                    displayName: 'News Item',
                    description: '–ù–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–±—ã—Ç–∏—è',
                },
                options: { draftAndPublish: true },
                attributes: {
                    title: { type: 'string', required: true },
                    alias: { type: 'string', unique: true },
                    introtext: { type: 'text' },
                    fulltext: { type: 'richtext' },
                    created: { type: 'datetime' },
                    hits: { type: 'integer', default: 0 },
                    featured: { type: 'boolean', default: false },

                    // –û—Ç–Ω–æ—à–µ–Ω–∏—è
                    category: {
                        type: 'relation',
                        relation: 'manyToOne',
                        target: 'api::category.category',
                        inversedBy: 'news_items',
                    },
                    author: {
                        type: 'relation',
                        relation: 'manyToOne',
                        target: 'api::author.author',
                        inversedBy: 'news_items',
                    },
                    tags: {
                        type: 'relation',
                        relation: 'manyToMany',
                        target: 'api::tag.tag',
                        inversedBy: 'news_items',
                    },

                    // –ú–µ–¥–∏–∞
                    image: { type: 'media', allowedTypes: ['images'], multiple: false },
                    gallery: { type: 'media', allowedTypes: ['images'], multiple: true },
                },
            },
        };

        console.log('‚úÖ –°—Ö–µ–º—ã —Å–æ–∑–¥–∞–Ω—ã. –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–¥–∏–º —Ñ–∞–π–ª—ã...');
        return { contentTypes };

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ö–µ–º:', error);
        throw error;
    }
}

module.exports = generateSchema;