const axios = require('axios');

const STRAPI_URL = 'http://localhost:1337';

async function diagnose() {
    console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Strapi...\n');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ URL
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ URL:');
    try {
        const response = await axios.get(STRAPI_URL, { timeout: 5000 });
        console.log('   ‚úÖ Strapi –æ—Ç–≤–µ—á–∞–µ—Ç');
        console.log('   Status:', response.status);
    } catch (error) {
        console.log('   ‚ùå Strapi –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç:', error.message);
        console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –ó–∞–ø—É—Å—Ç–∏—Ç–µ Strapi –∫–æ–º–∞–Ω–¥–æ–π: npm run develop');
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    console.log('\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ health check:');
    try {
        const response = await axios.get(`${STRAPI_URL}/_health`, { timeout: 5000 });
        console.log('   ‚úÖ Health check OK');
        console.log('   Status:', response.status);
        console.log('   Data:', response.data);
    } catch (error) {
        console.log('   ‚ö†Ô∏è Health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ REST API:');
    const endpoints = ['/api/categories', '/api/authors', '/api/news-items'];

    for (const endpoint of endpoints) {
        try {
            const response = await axios.get(`${STRAPI_URL}${endpoint}`, {
                timeout: 5000,
                validateStatus: null // –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã
            });
            console.log(`   ${endpoint}: ${response.status} ${response.statusText}`);
        } catch (error) {
            console.log(`   ${endpoint}: ERROR - ${error.message}`);
        }
    }

    console.log('\nüìã –í–´–í–û–î:');
    console.log('–ï—Å–ª–∏ –≤—Å–µ endpoints –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç 404, –∑–Ω–∞—á–∏—Ç:');
    console.log('1. Strapi –∑–∞–ø—É—â–µ–Ω, –Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç-—Ç–∏–ø—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã');
    console.log('2. –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç-—Ç–∏–ø—ã —á–µ—Ä–µ–∑ Content-Type Builder');
    console.log('3. –ò–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –≤ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
}

diagnose().catch(console.error);