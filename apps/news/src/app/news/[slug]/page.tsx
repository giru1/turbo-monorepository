import NewsDetail from "../../../components/NewsDetail/NewsDetail";
import { notFound } from "next/navigation";
import { NewsItem, Participant } from "@/types/news";
import { Grid, Container } from "@mui/material";
import NewsSidebar from "./components/NewsSidebar";
import { strapiClient } from "@/lib/strapi-client";

interface Props {
    params: Promise<{ slug: string }>;
}

export async function generateStaticParams() {
    try {
        console.log('üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π...');

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ Strapi
        const newsResponse = await strapiClient.getNewsItemsSimple();
        const news = newsResponse.data || [];

        console.log('üìù –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', news.length);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ slug'–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        const params = news.map((item) => ({
            slug: item.alias,
        }));

        console.log('‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', params);
        return params;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ slug –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', error);
        return [];
    }
}

export default async function NewsPage({ params }: Props) {
    const { slug } = await params;

    console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ slug:', slug);

    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ slug
        const newsResponse = await strapiClient.getNewsBySlug(slug);
        console.log('üìÑ –û—Ç–≤–µ—Ç –æ—Ç Strapi:', newsResponse);

        const newsItem = newsResponse.data?.[0];

        if (!newsItem) {
            console.log('‚ùå –ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è slug:', slug);
            notFound();
        }

        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å:', newsItem.title);

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        const formattedNewsItem: NewsItem = {
            title: newsItem.title,
            desc: newsItem.introtext + (newsItem.fulltext ? `\n\n${newsItem.fulltext}` : ''),
            date: new Date(newsItem.created).toLocaleDateString('ru-RU', {
                day: 'numeric',
                month: 'long',
                year: 'numeric'
            }),
            tags: newsItem.tags?.map(tag => tag.name) || [],
            images: getNewsImages(newsItem),
            participants: getParticipants(newsItem),
            category: newsItem.category?.name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
            hits: newsItem.hits || 0
        };

        return (
            <Container maxWidth="xl" sx={{ py: 4 }}>
                <Grid container spacing={4}>
                    <Grid size={{xs: 12, md: 4}}>
                        <NewsSidebar
                            participants={formattedNewsItem.participants}
                            date={formattedNewsItem.date}
                            tags={formattedNewsItem.tags}
                            currentSlug={slug}
                            category={formattedNewsItem.category}
                            hits={formattedNewsItem.hits}
                        />
                    </Grid>
                    <Grid size={{xs: 12, md: 8}}>
                        <NewsDetail
                            title={formattedNewsItem.title}
                            desc={formattedNewsItem.desc}
                            date={formattedNewsItem.date}
                            tags={formattedNewsItem.tags}
                            images={formattedNewsItem.images}
                            participants={formattedNewsItem.participants}
                            category={formattedNewsItem.category}
                            hits={formattedNewsItem.hits}
                        />
                    </Grid>
                </Grid>
            </Container>
        );

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏:', error);
        notFound();
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getNewsImages(newsItem: any): string[] {
    const images: string[] = [];
    const defaultImage = "http://localhost:9000/assets.orgma.ru/pic2_2_2c7257fb6c.png";

    console.log('üñºÔ∏è –ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏:', newsItem.title);
    console.log('üì∏ –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', newsItem.image);
    console.log('üñºÔ∏è –ì–∞–ª–µ—Ä–µ—è:', newsItem.gallery);

    // –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if (newsItem.image?.url) {
        const imageUrl = `http://localhost:1337${newsItem.image.url}`;
        images.push(imageUrl);
        console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', imageUrl);
    }

    // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
    if (newsItem.gallery && Array.isArray(newsItem.gallery)) {
        newsItem.gallery.forEach((img: any) => {
            if (img.url) {
                const imageUrl = `http://localhost:1337${img.url}`;
                images.push(imageUrl);
                console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏:', imageUrl);
            }
        });
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
    if (images.length === 0) {
        images.push(defaultImage);
        console.log('üñºÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    }

    console.log('üé® –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', images.length);
    return images;
}

function getParticipants(newsItem: any): Participant[] {
    const participants: Participant[] = [];

    console.log('üë• –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏:', newsItem.title);
    console.log('‚úçÔ∏è –ê–≤—Ç–æ—Ä:', newsItem.author);

    if (newsItem.author) {
        participants.push({
            id: newsItem.author.id.toString(),
            name: newsItem.author.name,
            role: '–ê–≤—Ç–æ—Ä',
            link: `/participants/${newsItem.author.id}`,
            avatar: newsItem.author.profile?.url ?
                `http://localhost:1337${newsItem.author.profile.url}` : null
        });
        console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∞–≤—Ç–æ—Ä:', newsItem.author.name);
    }

    console.log('üë• –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', participants.length);
    return participants;
}