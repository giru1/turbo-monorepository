import NewsDetail from "../../../components/NewsDetail/NewsDetail";
import { notFound } from "next/navigation";
import { NewsItem, Author, Tag, Category } from "@/types/news";
import { Grid, Container } from "@mui/material";
import NewsSidebar from "./components/NewsSidebar";
import { strapiClient } from "@/lib/strapi-client";

interface Props {
    params: Promise<{ slug: string }>;
}

export async function generateStaticParams() {
    try {
        console.log('üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π...');

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ Strapi
        const newsResponse = await strapiClient.getNewsItemsSimple();
        const news = newsResponse.data || [];

        console.log('üìù –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', news.length);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ slug'–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        const params = news.map((item) => ({
            slug: item.alias,
        }));

        console.log('‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', params);
        return params;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ slug –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', error);
        return [];
    }
}

export default async function NewsPage({ params }: Props) {
    const { slug } = await params;

    console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ slug:', slug);

    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ slug
        const newsResponse = await strapiClient.getNewsBySlug(slug);
        console.log('üìÑ –û—Ç–≤–µ—Ç –æ—Ç Strapi:', newsResponse);

        const newsItem = newsResponse.data?.[0];

        if (!newsItem) {
            console.log('‚ùå –ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è slug:', slug);
            notFound();
        }

        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å:', newsItem.title);

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        const formattedNewsItem: NewsItem = {
            title: newsItem.title,
            desc: newsItem.introtext + (newsItem.fulltext ? `${newsItem.fulltext}` : ''),
            date: new Date(newsItem.created).toLocaleDateString('ru-RU', {
                day: 'numeric',
                month: 'long',
                year: 'numeric'
            }),
            image: getMainImage(newsItem), // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            imageurl: newsItem.imageurl,
            tags: newsItem.tags?.map(tag => tag.name) || [],
            gallery: getNewsGallery(newsItem),
            authors: getAuthors(newsItem),
            category: newsItem.category?.name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
        };
        console.log('üìù –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:', formattedNewsItem);
        return (
            <Container maxWidth="xl" sx={{ py: 4 }}>
                <Grid container spacing={4}>
                    <Grid size={{xs: 12, md: 4}}>

                        <NewsSidebar
                            authors={formattedNewsItem.authors}
                            date={formattedNewsItem.date}
                            originalDate={newsItem.created} // –ü–µ—Ä–µ–¥–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –¥–∞—Ç—É –∏–∑ Strapi
                            tags={formattedNewsItem.tags}
                            currentSlug={slug}
                        />
                    </Grid>
                    <Grid size={{xs: 12, md: 8}}>
                        <NewsDetail
                            title={formattedNewsItem.title}
                            desc={formattedNewsItem.desc}
                            date={formattedNewsItem.date}
                            tags={formattedNewsItem.tags}
                            image={formattedNewsItem.image} // –ò—Å–ø–æ–ª—å–∑—É–µ–º image –≤–º–µ—Å—Ç–æ imageurl
                            imageurl={formattedNewsItem.image} // –¢–æ–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º image –¥–ª—è consistency
                            gallery={formattedNewsItem.gallery}
                            authors={formattedNewsItem.authors}
                            category={formattedNewsItem.category}
                        />
                    </Grid>
                </Grid>
            </Container>
        );

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏:', error);
        notFound();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function getMainImage(newsItem: any): string | null {
    console.log('üì∏ –ü–æ–∏—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏:', newsItem.title);

    // 1. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –ª–æ–∫–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ Strapi
    if (newsItem.image?.url) {
        const imageUrl = newsItem.image.url;
        console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ Strapi:', imageUrl);
        return imageUrl;
    }

    // 2. –†–µ–∑–µ—Ä–≤: imageurl (–≤–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞)
    if (newsItem.imageurl) {
        console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ imageurl:', newsItem.imageurl);
        return newsItem.imageurl;
    }

    // 3. –ó–∞–≥–ª—É—à–∫–∞ –µ—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    console.log('üñºÔ∏è –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞');
    return "https://via.placeholder.com/800x400/4f46e5/ffffff?text=–ù–µ—Ç+–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è";
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getNewsGallery(newsItem: any): string[] {
    console.log('üñºÔ∏è –ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≥–∞–ª–µ—Ä–µ–∏ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏:', newsItem.title);
    console.log('üì∏ –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', newsItem.image);
    console.log('üîó Image URL:', newsItem.imageurl);
    console.log('üñºÔ∏è –ì–∞–ª–µ—Ä–µ—è:', newsItem.gallery);

    const images: string[] = [];
    const mainImage = getMainImage(newsItem);

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –≥–∞–ª–µ—Ä–µ–∏ (–∏—Å–∫–ª—é—á–∞—è –¥—É–±–ª–∏–∫–∞—Ç—ã —Å –æ—Å–Ω–æ–≤–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º)
    if (newsItem.gallery && Array.isArray(newsItem.gallery)) {
        newsItem.gallery.forEach((img: any, index: number) => {
            if (img.url) {
                const galleryImageUrl = img.url;
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –¥—É–±–ª–∏–∫–∞—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                if (galleryImageUrl !== mainImage && !images.includes(galleryImageUrl)) {
                    images.push(galleryImageUrl);
                    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏ [${index}]:`, galleryImageUrl);
                } else if (galleryImageUrl === mainImage) {
                    console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è [${index}]`);
                }
            }
        });
    }

    // –ï—Å–ª–∏ –≤ –≥–∞–ª–µ—Ä–µ–µ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –Ω–æ –µ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (images.length === 0 && mainImage) {
        images.push(mainImage);
        console.log('üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≥–∞–ª–µ—Ä–µ–µ');
    }

    // –ï—Å–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
    if (images.length === 0) {
        const defaultImage = "https://via.placeholder.com/800x400/4f46e5/ffffff?text=–ù–µ—Ç+–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è";
        images.push(defaultImage);
        console.log('üñºÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫–∞ –≤ –≥–∞–ª–µ—Ä–µ–µ');
    }

    console.log('üé® –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –≥–∞–ª–µ—Ä–µ–µ:', images.length);
    return images;
}

function getAuthors(newsItem: any): Author[] {
    const authors: Author[] = [];

    console.log('üë• –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏:', newsItem.title);
    console.log('‚úçÔ∏è –ê–≤—Ç–æ—Ä:', newsItem.author);

    if (newsItem.author) {
        authors.push({
            id: newsItem.author.id.toString(),
            name: newsItem.author.name,
        });
        console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∞–≤—Ç–æ—Ä:', newsItem.author.name);
    }

    console.log('üë• –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', authors.length);
    return authors;
}